* Notes

** Applying a slot to a slot

(help 0 1 16)

2, 0, help
2, 0, zero
1, K, 0
1, S, 0
2, 0, succ
2, 0, zero  #### at this point we have help(zero)(1) in slot 0.
2, 1, zero
1, succ, 1
1, dbl, 1
1, dbl, 1
1, dbl, 1
1, dbl, 1   #### ... and 16 in slot 1.
1, K, 0     ### K(help 0 1)
1, S, 0     ### S(K(help 0 1))
2, 0, get   ### S(K(help 0 1) get)
1, K, 0     ### K(S(K(help 0 1) get))
1, S, 0     ### S(K(S(K(help 0 1) get)))
2, 0, succ  ### S (K(S(K(help 0 1) get))) succ
2, 0, zero  ### S (K...) succ 0

builds up
0={10000,S(K(S(K(help(zero)(1)))(get)))(succ)}
1={10000,16}

0={9984,I}
1={10017,16}

** In general

We'd like to solve the general problem of applying the contents of
slot N to the contents of slot 0.

The way to do this is to build up function foo in slot N with the
following wrapping:

S( K( S(K(foo))(get) ) ) I

And then apply slot N to the 'zero' card.

** Why does this work?

S(K(foo))(get) is the same as:

define fooget =
lambda x:
 return foo (get x)

Taking K of that gives us:

define foogetK =
lambda x:
 fooget

Taking S of foogetK and I gives us:

lambda x:
  h <-- foogetK x
  y <-- I x
  z <-- h y
  return z

which can be simplified as

lambda x:
  fooget x

which is the same as fooget.  Recall that fooget just get the contents
of a slot and applies foo to it.  So when we apply the function we've
built up in slot N to the 'zero' card, we'll be getting the contents
of slot 0 and applying foo to it.  The result will be left in slot 0.

** Want to apply to the contents of a different slot?

To apply function foo to the contents of slot 1, build up function foo
in slot N with the following wrapping:

S( K( S(K(foo))(get) ) ) succ

And then apply slot N to the 'zero' card.  The result will be left in
slot 1.




